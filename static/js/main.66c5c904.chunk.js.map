{"version":3,"sources":["components/TextInput.js","components/Form.js","index.js"],"names":["TextInput","props","state","value","handleChange","bind","event","inputValue","target","this","setState","onChange","label","type","placeholder","React","Component","Form","weightChange","weightValue","weight","computeBmi","heightChange","heightValue","height","defaultState","bmi","bmiClass","getColours","underweight","color","normal","overweight","obesity","bmivalue","toFixed","getBmi","styles","className","id","style","split","toLowerCase","ReactDOM","render","document","getElementById"],"mappings":"oNA0BeA,E,kDAvBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CAAEC,MAAO,IACpB,EAAKC,aAAa,EAAKA,aAAaC,KAAlB,gBAHJ,E,yDAMLC,GACT,IAAIC,EAAaD,EAAME,OAAOL,MAC9BM,KAAKC,SAAS,CAAEP,MAAOI,IACvBE,KAAKR,MAAMU,SAASJ,K,+BAGxB,OACI,6BACI,+BACEE,KAAKR,MAAMW,OAEb,2BAAOC,KAAK,OAAOV,MAAQM,KAAKP,MAAMC,MAAQW,YAAcL,KAAKR,MAAMa,YAAcH,SAAWF,KAAKL,oB,GAlBzFW,IAAMC,WCyEfC,G,wDAtEX,WAAYhB,GAAO,IAAD,8BACd,cAAMA,IAGViB,aAAe,SAACC,GACZ,EAAKT,SAAS,CAAEU,OAASD,GAAc,EAAKE,aAL9B,EAQlBC,aAAe,SAACC,GACZ,EAAKb,SAAS,CAAEc,OAASD,GAAe,EAAKF,aAT/B,EAYlBI,aAAa,WACT,MAAM,CACFD,OAAO,KACPJ,OAAO,GACPM,IAAK,KACLC,SAAU,kBAjBA,EA0ClBC,WAAa,WACT,MAAO,CACHC,YAAa,CAAEC,MAAO,WACtBC,OAAQ,CAAED,MAAO,WACjBE,WAAY,CAAEF,MAAO,WACrBG,QAAS,CAAEH,MAAO,aA7CtB,EAAK5B,MAAM,EAAKuB,eAFF,E,yDAsBd,IAAIS,GAAWzB,KAAKP,MAAMkB,OAAOX,KAAKP,MAAMsB,OAAUf,KAAKP,MAAMsB,QAAQW,QAAQ,GACjF1B,KAAKC,SAAS,CAAEgB,IAAMQ,IACtBzB,KAAKC,SAAS,CAAEiB,SAAWlB,KAAK2B,OAAOF,O,6BAGpCR,GACH,OAAGA,EAAI,KACI,cAERA,GAAK,MAAQA,EAAI,KACT,gBAERA,GAAK,IAAMA,EAAI,KACP,aAERA,GAAK,GACG,eADX,I,+BAcJ,IAAIW,EAAO5B,KAAKmB,aAChB,OACI,6BACI,yBAAKU,UAAU,OACf,kBAAC,EAAD,CAAW1B,MAAM,WAAW2B,GAAG,SAASzB,YAAY,yBAAyBH,SAAUF,KAAKa,gBAE5F,yBAAKgB,UAAU,OACX,kBAAC,EAAD,CAAW1B,MAAM,WAAW2B,GAAG,SAASzB,YAAY,qBAAqBH,SAAUF,KAAKS,gBAE5F,yBAAKoB,UAAU,OACX,mCAAS7B,KAAKP,MAAMwB,MAExB,yBAAKY,UAAU,QACX,wBAAIE,MAAOH,EAAO5B,KAAKP,MAAMyB,SAASc,MAAM,KAAK,GAAGC,gBAAiBjC,KAAKP,MAAMyB,gB,GAjE7EZ,IAAMC,YCAzB2B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.66c5c904.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass TextInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={ value: ''};\r\n        this.handleChange=this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        let inputValue = event.target.value;\r\n        this.setState({ value: inputValue });\r\n        this.props.onChange(inputValue);\r\n    }\r\nrender(){\r\n    return(\r\n        <div>\r\n            <label>\r\n            { this.props.label }\r\n            </label>\r\n            <input type=\"text\" value={ this.state.value } placeholder={ this.props.placeholder } onChange={ this.handleChange }/>\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\nexport default TextInput;","import React from 'react';\r\nimport TextInput from './TextInput';\r\nimport '../styles/Form.css';\r\n\r\nclass Form extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=this.defaultState();\r\n    }\r\n    weightChange = (weightValue) => {\r\n        this.setState({ weight : weightValue },this.computeBmi);\r\n    }\r\n\r\n    heightChange = (heightValue) => {\r\n        this.setState({ height : heightValue }, this.computeBmi);\r\n    }\r\n\r\n    defaultState=() =>{\r\n        return{\r\n            height:1.56,\r\n            weight:76,\r\n            bmi: 20.9,\r\n            bmiClass: 'Normal Weight'\r\n        };\r\n    }\r\n\r\n    computeBmi(){\r\n        var bmivalue=((this.state.weight/this.state.height) / this.state.height).toFixed(2);\r\n        this.setState({ bmi : bmivalue });\r\n        this.setState({ bmiClass : this.getBmi(bmivalue) });\r\n    }\r\n\r\n    getBmi(bmi){\r\n        if(bmi<18.5){\r\n            return \"Underweight\";\r\n        }\r\n        if(bmi>=18.5 && bmi<24.9){\r\n            return \"Normal Weight\";\r\n        }\r\n        if(bmi>=25 && bmi<29.9){\r\n            return \"Overweight\";\r\n        }\r\n        if(bmi>=30){\r\n            return \"Obesity\";\r\n        }\r\n    }\r\n\r\n    getColours = () =>{\r\n        return {\r\n            underweight: { color: '#87d6d5' },\r\n            normal: { color: '#26f041' },\r\n            overweight: { color: '#cbd111' },\r\n            obesity: { color: '#FF5411' }\r\n        }\r\n    }\r\nrender(){\r\n    let styles=this.getColours();\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n            <TextInput label=\"Height: \" id=\"height\" placeholder=\"Enter height in meters\" onChange={this.heightChange} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <TextInput label=\"Weight: \" id=\"weight\" placeholder=\"Enter weight in kg\" onChange={this.weightChange}/>\r\n            </div>\r\n            <div className=\"bmi\">\r\n                <h3>BMI={this.state.bmi}</h3>\r\n            </div> \r\n            <div className=\"type\">\r\n                <h3 style={styles[this.state.bmiClass.split(' ')[0].toLowerCase()]}>{this.state.bmiClass}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default Form;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from './components/Form.js';\n\nReactDOM.render(\n  <Form/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}